.gitignore

# Toolchain commands (can be overridden)
RUSTC = rustc
ifeq (@(ARCH),amd64)
    LD := x86_64-elf-ld
    OBJDUMP := x86_64-elf-objdump
    OBJCOPY := x86_64-elf-objcopy
    AR := x86_64-elf-ar
	CC := clang -target x86_64-unknown-linux-gnu
else
    ifeq (@(ARCH),x86)
        LD := i586-elf-ld
        OBJDUMP := i586-elf-objdump
        AR := i586-elf-ar
        CC := clang -target i586-elf
    else
        error Unknown architecture @(ARCH)
    endif
endif

TARGETSPEC := $(TUP_CWD)/Kernel/arch/@(ARCH)/target.json

RUSTFLAGS := -O -g --cfg arch__@(ARCH) --target=$(TARGETSPEC)
CCFLAGS := -O -g

ifeq (@(ARCH),amd64)
RUSTFLAGS += -C soft-float -C no-redzone
CCFLAGS += -fPIC -mno-red-zone
endif

ARFLAGS += crus
ASFLAGS += -I $(TUP_CWD)/include
LINKFLAGS += --gc-sections -z max-page-size=0x1000

!AR = |> $(AR) $(ARFLAGS) -o %o %f |>
!AS = |> $(CC) $(ASFLAGS) -c -o %o %f |>
!CC = |> $(CC) $(CCFLAGS) -c -o %o %f |>
!LD = |> $(LD) $(LINKFLAGS) -o %o %f |>
!RUSTC_BIN = |> $(RUSTC) $(RUSTFLAGS) -o %o --crate-type bin %f |>
!RUSTC_LIB = |> $(RUSTC) $(RUSTFLAGS) -o %o --crate-type=lib --emit=link %f |>
!RUSTC_OBJ = |> $(RUSTC) $(RUSTFLAGS) -o %o --emit=obj %f |>

