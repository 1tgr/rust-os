include_rules

RUSTFLAGS += -L ../liballoc
RUSTFLAGS += -L ../liballoc_system
RUSTFLAGS += -L ../libcollections
RUSTFLAGS += -L ../libcore
RUSTFLAGS += -L ../liblibc
RUSTFLAGS += -L ../librustc_unicode

LIBS += ../liballoc/liballoc.rlib
LIBS += ../liballoc_system/liballoc_system.rlib
LIBS += ../libcollections/libcollections.rlib
LIBS += ../libcore/libcore.rlib
LIBS += ../liblibc/liblibc.rlib
LIBS += ../librustc_unicode/librustc_unicode.rlib
LIBS += ../libsyscall/libsyscall_kernel.rlib

LIBS1 += ../newlib/$(TARGET)/lib/libc.a

RUSTFLAGS += --extern alloc=../liballoc/liballoc.rlib
RUSTFLAGS += --extern collections=../libcollections/libcollections.rlib
RUSTFLAGS += --extern core=../libcore/libcore.rlib
RUSTFLAGS += --extern rustc_unicode=../librustc_unicode/librustc_unicode.rlib
RUSTFLAGS += --extern syscall=../libsyscall/libsyscall_kernel.rlib

RUSTCFLAGS += --cfg feature=\"test\"

: foreach arch/@(ARCH)/*.S |> !AS |> %B.o {objs}
: foreach *.c |> !CC |> %B.o {objs}
: main.rs | $(LIBS) *.rs |> !RUSTC_OBJ |> kernel.o {objs}
#: main.rs | $(LIBS) *.rs |> !RUSTC_OBJ --pretty=expanded -Z unstable-options |> kernel_expanded.rs

: main.rs |> !RUSTDOC_CMD |> rustdoc

ifeq (@(ARCH),amd64)
: {objs} $(LIBS) $(LIBS1) | arch/amd64/link.ld |> !LD -T arch/amd64/link.ld |> kernel-amd64
: kernel-amd64 |> $(OBJCOPY) -SF elf32-i386 %f %o |> kernel
: kernel-amd64 |> $(OBJDUMP) -d %f > %o |> kernel.txt
else
: {objs} $(LIBS) $(LIBS1) | arch/@(ARCH)/link.ld |> !LD -T arch/@(ARCH)/link.ld |> kernel
: kernel |> $(OBJDUMP) -Sd %f > %o |> kernel.txt
endif
