.gitignore

RUSTC = $(TUP_CWD)/rust rustc
RUSTDOC = $(TUP_CWD)/rust rustdoc

ifeq (@(ARCH),amd64)
    TARGET := x86_64-elf
    ASFLAGS += -m64
    CCFLAGS += -m64
else
    ifeq (@(ARCH),x86)
        TARGET := i586-elf
        ASFLAGS += -m32
        CCFLAGS += -m32
    else
        error Unknown architecture @(ARCH)
    endif
endif

CC := gcc
LD := $(TARGET)-ld
OBJDUMP := $(TARGET)-objdump
OBJCOPY := $(TARGET)-objcopy
AR := $(TARGET)-ar

TARGETSPEC := $(TUP_CWD)/Kernel/arch/@(ARCH)/target.json
RUSTFLAGS += --cfg arch__@(ARCH) --target=$(TARGETSPEC)

ifeq (1,0)
RUSTCFLAGS += -C opt-level=0
CCFLAGS += -O0
else
RUSTCFLAGS += -O -C debug-assertions
CCFLAGS += -O
endif

RUSTCFLAGS += -g
CCFLAGS += -g -ffreestanding -I $(TUP_CWD)/newlib/$(TARGET)/include

ifeq (@(ARCH),amd64)
CCFLAGS += -mcmodel=kernel -mno-red-zone
endif

ARFLAGS += crus
ASFLAGS += -g -I $(TUP_CWD)/newlib/$(TARGET)/include
LINKFLAGS += --gc-sections -z max-page-size=0x1000

!AR = |> $(AR) $(ARFLAGS) -o %o %f |>
!AS = |> $(CC) $(ASFLAGS) -c -o %o %f |>
!CC = |> $(CC) $(CCFLAGS) -c -o %o %f |>
!LD = |> $(LD) $(LINKFLAGS) -o %o %f `$(CC) $(CCFLAGS) -print-libgcc-file-name` |>
!RUSTC_BIN = |> $(RUSTC) $(RUSTFLAGS) $(RUSTCFLAGS) -o %o --crate-type bin %f |>
!RUSTC_LIB = |> $(RUSTC) $(RUSTFLAGS) $(RUSTCFLAGS) -o %o --crate-type=lib --emit=link %f |>
!RUSTC_OBJ = |> $(RUSTC) $(RUSTFLAGS) $(RUSTCFLAGS) -o %o --emit=obj %f |>
!RUSTDOC_CMD = |> echo $(RUSTDOC) $(RUSTFLAGS) %f -o ../../doc > %o && chmod +x %o |>
