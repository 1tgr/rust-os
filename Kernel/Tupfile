include_rules

!LD = |> $(LD) $(LINKFLAGS) -o %o %f |>
!RUSTC_BIN = |> $(RUSTC) $(RUSTFLAGS) -o %o --crate-type bin %f |>
!RUSTC_OBJ = |> $(RUSTC) $(RUSTFLAGS) -o %o --emit=obj %f |>

ifeq (@(ARCH),test)
: main.rs | *.rs |> !RUSTC_BIN |> kernel.bin
else
LINKFLAGS += --gc-sections
LINKFLAGS += -z max-page-size=0x1000
RUSTFLAGS += -L ../liballoc -L ../libcollections -L ../libcore -L ../liblibc -L ../librustc_unicode

KERNEL_LIBS = ../liballoc/liballoc.rlib ../libcollections/libcollections.rlib ../libcore/libcore.rlib ../liblibc/liblibc.rlib ../libstd/libstd.rlib ../libc/libc.a

RUSTFLAGS += --extern alloc=../liballoc/liballoc.rlib --extern collections=../libcollections/libcollections.rlib --extern core=../libcore/libcore.rlib --extern std=../libstd/libstd.rlib

: arch/@(ARCH)/start.S |> !AS |> start.o {objs}
: main.rs | $(KERNEL_LIBS) *.rs |> !RUSTC_OBJ |> kernel.o {objs}

ifeq (@(ARCH),amd64)
: {objs} $(KERNEL_LIBS) | arch/amd64/link.ld |> !LD -T arch/amd64/link.ld |> kernel.amd64.bin
: kernel.amd64.bin |> $(OBJCOPY) -F elf32-i386 %f %o |> kernel.bin
: kernel.amd64.bin |> $(OBJDUMP) -Sd %f > %o |> kernel.txt
else
: {objs} $(KERNEL_LIBS) | arch/@(ARCH)/link.ld |> !LD -T arch/@(ARCH)/link.ld |> kernel.bin
: kernel.bin |> $(OBJDUMP) -Sd %f > %o |> kernel.txt

endif

endif
