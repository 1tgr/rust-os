include_rules

!LD = |> $(LD) $(LINKFLAGS) -o %o %f |>
!RUSTC_BIN = |> $(RUSTC) $(RUSTFLAGS) -o %o --crate-type bin %f |>
!RUSTC_OBJ = |> $(RUSTC) $(RUSTFLAGS) -o %o --emit=obj %f |>

LINKFLAGS += --gc-sections
LINKFLAGS += -z max-page-size=0x1000
RUSTFLAGS += -L ../liballoc -L ../libcollections -L ../libcore -L ../liblibc -L ../librustc_unicode -L ../modules

KERNEL_LIBS += ../liballoc/liballoc.rlib
KERNEL_LIBS += ../libc/libc.a
KERNEL_LIBS += ../libcollections/libcollections.rlib
KERNEL_LIBS += ../libcore/libcore.rlib
KERNEL_LIBS += ../liblibc/liblibc.rlib
KERNEL_LIBS += ../libstd/libstd.rlib
KERNEL_LIBS += ../modules/liblazy-static.rlib
KERNEL_LIBS += ../modules/libspin.rlib

RUSTFLAGS += --extern alloc=../liballoc/liballoc.rlib
RUSTFLAGS += --extern collections=../libcollections/libcollections.rlib
RUSTFLAGS += --extern core=../libcore/libcore.rlib
RUSTFLAGS += --extern lazy_static=../modules/liblazy-static.rlib
RUSTFLAGS += --extern spin=../modules/libspin.rlib
RUSTFLAGS += --extern std=../libstd/libstd.rlib

: arch/@(ARCH)/start.S |> !AS |> start.o {objs}
: main.rs | $(KERNEL_LIBS) *.rs |> !RUSTC_OBJ |> kernel.o {objs}
#: main.rs | $(KERNEL_LIBS) *.rs |> !RUSTC_OBJ --pretty=expanded -Z unstable-options |> kernel_expanded.rs

ifeq (@(ARCH),amd64)
: {objs} $(KERNEL_LIBS) | arch/amd64/link.ld |> !LD -T arch/amd64/link.ld |> kernel.amd64.bin
: kernel.amd64.bin |> $(OBJCOPY) -F elf32-i386 %f %o |> kernel.bin
#: kernel.amd64.bin |> $(OBJDUMP) -Sd %f > %o |> kernel.txt
else
: {objs} $(KERNEL_LIBS) | arch/@(ARCH)/link.ld |> !LD -T arch/@(ARCH)/link.ld |> kernel.bin
# : kernel.bin |> $(OBJDUMP) -Sd %f > %o |> kernel.txt
endif
